{"version":3,"sources":["utils/actions.js","alert.js","containers/Search.js","containers/Home.js","containers/Add.js","containers/Remove.js","containers/App.js","utils/fetchFunctions.js","utils/sagas.js","utils/reducers/fetchReducer.js","utils/reducers/appReducer.js","utils/reducers/rootReducer.js","reportWebVitals.js","index.js"],"names":["SHOW_ALERT","HIDE_ALERT","REQUEST_SEARCH_RESULT","FETCH_SEARCH_RESULT","REQUEST_TABLE_FIELDS","FETCH_TABLE_FIELDS","ADD_NEW_ENTITY","DELETE_ENTITY","hideAlert","type","displayAlert","error","className","role","Search","props","state","id","alert","result","handleSubmit","bind","handleChange","prevProps","prevState","snapshot","this","setState","event","preventDefault","fetchSearchResult","target","name","value","data","i","entry","row","Object","keys","map","element","push","length","scope","table","renderTable","alertBlock","onSubmit","placeholder","onChange","require","Component","actions","withRouter","connect","fetchReducer","app","Home","buttonValues","buttons","getButton","page","href","buttonRender","renderButtons","Add","fields","handleFieldChange","handleFieldsSubmit","fetchTableFields","Map","set","addNewEntity","emptyToNull","fieldsWithNull","forEach","v","k","console","log","key","form","renderForm","entity","Remove","deleteEntity","App","Switch","Route","path","exact","component","axios","get","then","response","student","fromEntries","method","url","headers","JSON","stringify","delete","sagaWatcher","requestStudent","requestTableFields","addNewEntitySaga","deleteEntitySaga","takeEvery","action","call","payload","put","initialState","reducers","combineReducers","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","saga","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8519315.chunk.js","sourcesContent":["export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\nexport const REQUEST_SEARCH_RESULT = 'REQUEST_SEARCH_RESULT'\nexport const FETCH_SEARCH_RESULT = 'FETCH_SEARCH_RESULT'\nexport const REQUEST_TABLE_FIELDS = 'REQUEST_TABLE_FIELDS'\nexport const FETCH_TABLE_FIELDS = 'FETCH_TABLE_FIELDS'\nexport const ADD_NEW_ENTITY = 'ADD_NEW_ENTITY'\nexport const DELETE_ENTITY = 'DELETE_ENTITY'\n\nexport function showAlert(error) {\n    return {\n        type: SHOW_ALERT,\n        error: error\n    }\n}\n\nexport function hideAlert() {\n    return {\n        type: HIDE_ALERT\n    }\n}\n\nexport function fetchSearchResult(id) {\n    return {\n        type: REQUEST_SEARCH_RESULT,\n        data: {\n            id: id\n        }\n    }\n}\n\nexport function fetchTableFields() {\n    return {\n        type: REQUEST_TABLE_FIELDS\n    }\n}\n\nexport function addNewEntity(entity) {\n    return {\n        type: ADD_NEW_ENTITY,\n        data: {\n            entity: entity\n        }\n    }\n}\n\nexport function deleteEntity(id) {\n    return {\n        type: DELETE_ENTITY,\n        data: {\n            id: id\n        }\n    }\n}","import React from \"react\";\n\nexport default function displayAlert(error) {\n    return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n            <p>{error}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchSearchResult} from \"../utils/actions\";\nimport {withRouter} from \"react-router-dom\";\nimport displayAlert from \"../alert\";\n\nconst {Component} = require(\"react\");\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            alert: this.props.alert,\n            result: this.props.result\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.result !== prevProps.result) {\n            this.setState({result: this.props.result});\n        }\n        if(this.props.alert !== prevProps.alert) {\n            this.setState({alert: this.props.alert})\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.fetchSearchResult(this.state.id)\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    renderTable(result) {\n        let data = [];\n        for (let i = 0; i < result.length; i++) {\n            const entry = result[i];\n            const row = (\n                <tr>\n                    {\n                        Object.keys(entry).map(function (element) {\n                            return (<td>{entry[element]}</td>);\n                        })\n                    }\n                </tr>\n            )\n            data.push(row);\n        }\n        return (\n            <div>\n                <table className='table'>\n                    <thead>\n                    {\n                        Object.keys(result[0]).map(function (element) {\n                            return <th scope='col'>{element}</th>;\n                        })\n                    }\n                    </thead>\n                    <tbody>\n                    {data}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    render() {\n        const {result, alert} = this.state;\n        const table = result.length !== 0\n            ? this.renderTable(result)\n            : null;\n        const alertBlock = alert.state\n            ? displayAlert(alert.error)\n            : null;\n        return (\n            <div>\n                {alertBlock}\n                <div className='jumbotron'>\n                    <div className='container'>\n                        <h1 className=\"display-3\"> Search in database </h1>\n                    </div>\n                </div>\n                <div className='container'>\n                    <form className='input-group mb-3' onSubmit={this.handleSubmit}>\n                        <input className='form-control mr-sm-2' placeholder='Id' type='text' name='id' onChange={this.handleChange}/>\n                        <button className='btn btn-secondary' type='submit'>Search</button>\n                    </form>\n                    <div>\n                        {table}\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nfunction mapState(state) {\n    return {\n        result: state.fetchReducer.result,\n        alert: state.app.alert\n    }\n}\n\nconst actions = {\n    fetchSearchResult: fetchSearchResult\n}\n\nexport default withRouter(connect(mapState, actions)(Search));","import React from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {Component} from \"react\";\n\nclass Home extends Component {\n\n    renderButtons(buttonValues) {\n        const buttons = [];\n        for (let i = 0; i < buttonValues.length; i++) {\n            buttons.push(this.getButton(buttonValues[i][0], buttonValues[i][1]));\n        }\n        return buttons;\n    }\n\n    getButton(page, name) {\n        return (\n            <div className='col-md-3'>\n                <p>\n                    <a className='btn btn-secondary btn-lg' role='button' href={page}> {name} </a>\n                </p>\n            </div>\n        )\n    }\n\n    render() {\n        const buttonValues = [[\"search\", \"Search\"], [\"add\", \"Add value\"], [\"remove\", \"Remove value\"]];\n        const buttonRender = this.renderButtons(buttonValues);\n        return (\n            <div>\n                <div className='jumbotron'>\n                    <div className='container'>\n                        <h1 className=\"display-3\"> Database web application </h1>\n                        <p className='lead'> A simple webapp for the included database. Please select one of the actions below </p>\n                    </div>\n                </div>\n                <div className='container'>\n                    <div className='row'>\n                        {buttonRender}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Home)","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {addNewEntity, fetchTableFields} from \"../utils/actions\";\nimport {withRouter} from \"react-router-dom\";\nimport displayAlert from \"../alert\";\n\nconst {Component} = require(\"react\");\n\nclass Add extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: this.props.fields,\n            alert: this.props.alert\n        }\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleFieldsSubmit = this.handleFieldsSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.props.fetchTableFields();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.fields !== prevProps.fields) {\n            const fields = new Map();\n            for (let i = 0; i < this.props.fields.length; i++) {\n                fields.set(this.props.fields[i], \"\")\n            }\n            this.setState({fields: fields});\n        }\n        if (this.props.alert !== prevProps.alert) {\n            this.setState({alert: this.props.alert})\n        }\n    }\n\n    handleFieldsSubmit(event) {\n        event.preventDefault();\n        this.props.addNewEntity(this.emptyToNull(this.state.fields));\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleFieldChange(event) {\n        event.preventDefault();\n        this.state.fields.set(event.target.name, event.target.value);\n    }\n\n    emptyToNull(fields) {\n        const fieldsWithNull = new Map();\n        fields.forEach((v, k) => {if(v === \"\") { fieldsWithNull.set(k, null)} else { fieldsWithNull.set(k, v)}});\n        console.log(\"fieldsWithNull\", fieldsWithNull);\n        return fieldsWithNull;\n    }\n\n    renderForm(fields) {\n        let data = [];\n        for (let key of fields.keys()) {\n            let row = (\n                <div className='form-group'>\n                    <input className='form-control' placeholder={key} type='text' name={key} onChange={this.handleFieldChange}/>\n                </div>\n               )\n            data.push(row);\n        }\n        return (\n            <form className='form-group' onSubmit={this.handleFieldsSubmit}>\n                {data}\n                <button className='btn btn-outline-secondary' type='submit'>Add</button>\n            </form>\n        );\n    }\n\n    render() {\n        const {fields, alert} = this.state;\n        const form = fields.length !== 0\n            ? this.renderForm(fields)\n            : null;\n        const alertBlock = alert.state\n            ? displayAlert(alert.error)\n            : null;\n        return (\n            <div>\n                {alertBlock}\n                <div className='jumbotron'>\n                    <div className='container'>\n                        <h1 className=\"display-3\"> Add to database </h1>\n                    </div>\n                </div>\n                <div className='container'>\n                    <div>\n                        {form}\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nfunction mapState(state) {\n    return {\n        fields: state.fetchReducer.fields,\n        alert: state.app.alert\n    }\n}\n\nconst actions = {\n    fetchTableFields: fetchTableFields,\n    addNewEntity: addNewEntity\n}\n\nexport default withRouter(connect(mapState, actions)(Add));","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {deleteEntity} from \"../utils/actions\";\nimport {withRouter} from \"react-router-dom\";\nimport displayAlert from \"../alert\";\n\nconst {Component} = require(\"react\");\n\nclass Remove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            alert: this.props.alert\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.alert !== prevProps.alert) {\n            this.setState({alert: this.props.alert})\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.deleteEntity(this.state.id);\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    render() {\n        const {alert} = this.state;\n        const alertBlock = alert.state\n            ? displayAlert(alert.error)\n            : null;\n        return (\n            <div>\n                {alertBlock}\n                <div className='jumbotron'>\n                    <div className='container'>\n                        <h1 className=\"display-3\"> Remove from database </h1>\n                    </div>\n                </div>\n                <div className='container'>\n                    <form className='input-group mb-3' onSubmit={this.handleSubmit}>\n                        <input className='form-control mr-sm-2' placeholder='Id' type='text' name='id' onChange={this.handleChange}/>\n                        <button className='btn btn-secondary' type='submit'>Delete</button>\n                    </form>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nfunction mapState(state) {\n    return {\n        alert: state.app.alert\n    }\n}\n\nconst actions = {\n    deleteEntity: deleteEntity\n}\n\nexport default withRouter(connect(mapState, actions)(Remove));","import '../App.css';\nimport React, {Component} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Search from \"./Search\";\nimport Home from \"./Home\";\nimport Add from \"./Add\";\nimport Remove from \"./Remove\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <div>\n            <Switch>\n              <Route path='/' exact={true} component={Home}/>\n              <Route path='/search' exact={true} component={Search}/>\n              <Route path='/add' exact={true} component={Add}/>\n              <Route path='/remove' exact={true} component={Remove}/>\n            </Switch>\n          </div>\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","const axios = require('axios');\n\nexport function fetchSearchResult(data) {\n    return axios.get(`/api/student/search/${data.id}`).then(function (response) { return response.data })\n}\n\nexport function fetchTableFields() {\n    return axios.get('/api/student/add/fields').then(function (response) { return response.data })\n}\n\nexport function addNewEntity(data) {\n    const student = Object.fromEntries(data.entity);\n    return axios({\n        method: 'POST',\n        url: 'api/student/add',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        data: JSON.stringify(student)\n    })\n}\n\nexport function deleteEntity(data) {\n    return axios.delete(`api/student/delete/${data.id}`);\n}","import {takeEvery, put, call} from 'redux-saga/effects'\nimport {\n    ADD_NEW_ENTITY, DELETE_ENTITY,\n    FETCH_SEARCH_RESULT,\n    FETCH_TABLE_FIELDS,\n    REQUEST_SEARCH_RESULT,\n    REQUEST_TABLE_FIELDS,\n    hideAlert,\n    showAlert, SHOW_ALERT\n} from \"./actions\";\nimport {addNewEntity, deleteEntity, fetchSearchResult, fetchTableFields} from \"./fetchFunctions\";\n\n\nexport default function* sagaWatcher() {\n    yield takeEvery(REQUEST_SEARCH_RESULT, requestStudent);\n    yield takeEvery(REQUEST_TABLE_FIELDS, requestTableFields);\n    yield takeEvery(ADD_NEW_ENTITY, addNewEntitySaga);\n    yield takeEvery(DELETE_ENTITY, deleteEntitySaga)\n}\n\nfunction* requestStudent(action) {\n    try {\n        const payload = yield call(fetchSearchResult, action.data);\n        yield put({type: FETCH_SEARCH_RESULT, payload});\n        yield put(hideAlert());\n    } catch (error) {\n        yield put({type: SHOW_ALERT, error});\n    }\n}\n\nfunction* requestTableFields() {\n    try {\n        const payload = yield call(fetchTableFields);\n        yield put({type: FETCH_TABLE_FIELDS, payload});\n        yield put(hideAlert());\n    } catch (error) {\n        yield put({type: SHOW_ALERT, error});\n    }\n}\n\nfunction* addNewEntitySaga(action) {\n    try {\n        yield call(addNewEntity, action.data);\n    } catch (error) {\n        yield put({type: SHOW_ALERT, error});\n    }\n}\n\nfunction* deleteEntitySaga(action) {\n    try {\n        yield call(deleteEntity, action.data);\n    } catch (error) {\n        yield put({type: SHOW_ALERT, error});\n    }\n}","import {FETCH_SEARCH_RESULT, FETCH_TABLE_FIELDS} from \"../actions\";\n\nconst initialState = {\n    result: [],\n    fields: []\n}\n\n\nexport const fetchReducer = (state= initialState, action) => {\n    switch (action.type) {\n        case FETCH_SEARCH_RESULT :\n            return {...state, result: action.payload}\n        case FETCH_TABLE_FIELDS :\n            return {...state, fields: action.payload}\n        default : return state;\n    }\n}","import {HIDE_ALERT, SHOW_ALERT} from \"../actions\";\n\nconst initialState = {\n    alert: {\n        state: false,\n        error: \"\"\n    }\n}\n\nexport const appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_ALERT:\n            return {...state, alert: {state: true, error: action.error.toString()}}\n        case HIDE_ALERT:\n            return {...state, alert: {state: false, error: \"\"}}\n        default: return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {fetchReducer} from \"./fetchReducer\";\nimport {appReducer} from \"./appReducer\";\n\nconst reducers = combineReducers({\n    app: appReducer,\n    fetchReducer: fetchReducer\n})\n\nexport default reducers;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {applyMiddleware, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagaWatcher from \"./utils/sagas\";\nimport rootReducer from \"./utils/reducers/rootReducer\";\nimport reportWebVitals from './reportWebVitals';\n\nconst saga = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(saga));\n\nsaga.run(sagaWatcher);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}